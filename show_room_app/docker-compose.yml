version: '3'


services:
  web:
    build:
      context: .
    container_name: show_room_app
    restart: always
    command: sh ./start.sh
    volumes:
      - .:/usr/src/show_room_app
    ports:
      - "8000:8000"
    depends_on:
      - pq_db
      - redis


  redis:
    container_name: redis
    image: "redis:alpine"
    restart: always



  pq_db:
    container_name: postgres-app
    image: postgres
    restart: always
    environment:
      - POSTGRES_HOST=${SQL_HOST}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_DB=${SQL_NAME}
    volumes:
      - pg_project:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - "5432:5432"


  celery:
    restart: always
    build:
      context: .
    command: celery -A show_room_app worker -l info
    volumes:
      - .:/usr/src/show_room_app
    environment:
      - DEBUG_KEY=${SECRET_KEY}
      - ALLOWED_HOST=${ALLOWED_HOST}
      - POSTGRES_HOST=${SQL_HOST}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_USER=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_DB=${SQL_NAME}
    env_file:
      - ./.env
    depends_on:
      - pq_db
      - redis


  flower:
    build:
      context: .
    restart: always
    ports:
      - '5555:5555'
    command: "celery -A show_room_app flower --address=0.0.0.0"
    depends_on:
      - celery

  celery-beat:
    build:
      context: .
    command: celery -A show_room_app beat -l info
    volumes:
      - .:/usr/src/show_room_app
    environment:
      - DEBUG=${SECRET_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${ALLOWED_HOST}
    depends_on:
      - redis
      - pq_db

volumes:
  pg_project:
